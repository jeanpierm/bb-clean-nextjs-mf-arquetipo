import styles from "@sections/home/Home.module.css";
import Head from "next/head";
import Link from "next/link";
import { Suspense, lazy, useEffect, useState } from "react";
import { getUser } from "../application/GetUser";
import { getNameAndUsernameConcatenated } from "../application/GetUserWithConcatenado";
import { User } from "../domain/models/User";
import Footer from "../sections/shared/Footer";
import InputText from "../sections/shared/InputText";
import Nav from "../sections/shared/Nav";

const RemoteButton =
  typeof window !== "undefined"
    ? // @ts-expect-error is a federated module.
      lazy(() => import("geo/myButton"))
    : () => null;

export default function Home() {
  const [remoteButton, setRemoteButton] = useState(false);
  const [text, setText] = useState<string>("");
  const [user, setUser] = useState<User | null>(null);
  const [concatenatedName, setConcatenatedName] = useState<string>("");

  useEffect(() => {
    setRemoteButton(true);

    // evento de texto quemado en input text
    const handleDatoQuemadoEvent = (event: any) => {
      setText(event.detail);
      console.log("poner datos quemados en input");
    };
    window.addEventListener("datoQuemado", handleDatoQuemadoEvent);

    // evento de obtener data de API en textarea y caso de uso para obtener nombre concatenado
    const handleFetchUserEvent = () => {
      getUser().then((user) => {
        setUser(user);
        console.log("obtener y mostrar data de AatPI en textarea");

        const concatenated = getNameAndUsernameConcatenated(user);
        setConcatenatedName(concatenated);
        console.log("caso de uso de concatenar nombres");
      });
    };
    window.addEventListener("fetchUser", handleFetchUserEvent);

    return () => {
      // limpiar listeners de eventos
      window.removeEventListener("datoQuemado", handleDatoQuemadoEvent);
      window.removeEventListener("fetchUser", handleFetchUserEvent);
    };
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav>nav from container-app</Nav>
      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to the container-app</h1>

        <br />
        <Link href="/provinces">Go to provinces page</Link>
        <Link href="/search-province">Go to search province</Link>

        <br />
        {remoteButton ? (
          <Suspense fallback={<div>Loading...</div>}>
            <p>
              Press the button (remote from geo-app) for send data to input,
              textarea and execute use case
            </p>
            <RemoteButton>Send data</RemoteButton>
          </Suspense>
        ) : null}

        <br />
        <InputText
          placeholder="Click on button to set value"
          value={text}
          readOnly
        />

        <br />
        <textarea
          value={
            "dato obtenido desde API por custom event desde geo-app:\n\n" +
            JSON.stringify(user, null, 3)
          }
          readOnly
          rows={10}
          style={{ width: "30rem" }}
        />

        <p>
          <strong>Caso de uso - Nombres concatenados:</strong>{" "}
          {concatenatedName}
        </p>
      </main>
      <Footer>footer from container-app</Footer>
    </>
  );
}
