import styles from "@sections/home/Home.module.css";
import Head from "next/head";
import Link from "next/link";
import { Suspense, lazy, useEffect, useState } from "react";
import { Province } from "../domain/models/Province";
import Footer from "../sections/shared/Footer";
import Nav from "../sections/shared/Nav";
import ProvinceSelected from "../sections/provinces/ProvinceSelected";

const SearchProvince =
  typeof window !== "undefined"
    ? // @ts-expect-error is a federated module.
      lazy(() => import("geo/searchProvince"))
    : () => null;

export default function Home() {
  const [searchProvince, setSearchProvince] = useState(false);
  const [provinceSelected, setProvinceSelected] = useState<Province | null>(
    null
  );

  useEffect(() => {
    setSearchProvince(true);

    // establece datos obtenido desde el otro micro-frontend
    window.addEventListener("provinceSelected", (e: any) => {
      setProvinceSelected(e.detail);
    });
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Nav>nav from container-app</Nav>
      <main className={styles.main}>
        <h1 className={styles.title}>Search province</h1>

        <br />
        <Link href="/">Go Back</Link>

        <br />
        {searchProvince ? (
          <Suspense fallback={<div>Loading...</div>}>
            <SearchProvince />
          </Suspense>
        ) : null}

        <br />
        <ProvinceSelected province={provinceSelected} />
      </main>
      <Footer>footer from container-app</Footer>
    </>
  );
}
